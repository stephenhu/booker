:javascript
  $(function() {
    $("#datepicker1").datepicker();
    $("#datepicker2").datepicker();
    check_token();
    set_menu("reservations");
    set_duration("#{d}");
    set_recurring(#{recurring});
  });
.container-fluid
  .row-fluid
    .span12
      %h2 book meeting
      %input.input-large.hidden{ :type => "email", :id => "email", :placeholder => "email" }
      %span.error.hidden{ :id => "email-error" } required
      %br
      - if !update
        %input.input-xlarge{ :type => "text", :id => "title", :placeholder => "meeting title" }
      - else
        %input.input-xlarge{ :type => "text", :id => "title", :placeholder => "meeting title", :value => "#{title}" }
      %span.error.hidden{ :id => "title-error" } required 
      %br
      - if !update
        %input.input-xxlarge{ :type => "text", :id => "invitees", :placeholder => "invitees (comma separated)" }
      - else
        %input.input-xxlarge{ :type => "text", :id => "invitees", :placeholder => "invitees (comma separated)", :value => "#{invitees}" }
      %span.error.hidden{ :id => "invitees-error" } required
      %span.error.hidden{ :id => "invalid-email-error" } invalid email address or addresses
      %span.error.hidden{ :id => "invalid-email-domain-error" } must be from emc, mozy, rbcon, or vmware domain
      %br
      %br
      %select.input-xxlarge{ :id => "uuid" }
        - rooms.each do |room|
          - if room.id == id.to_i
            %option{ :value => "#{room.uuid}", :selected => "selected" } 
              = room.full_name
          - else
            %option{ :value => "#{room.uuid}" }
              = room.full_name
      %form.form-inline
        - if !update
          %input#datepicker1{ :type => "text", :placeholder => "start date", :value => "#{Date.today.strftime( "%m/%d/%Y" )}" }
          %input#datepicker2{ :type => "text", :placeholder => "end date", :value => "#{Date.today.strftime(     "%m/%d/%Y" )}", :disabled => "disabled" }
        - else
          %input#datepicker1{ :type => "text", :placeholder => "start date", :value => "#{sdate}" }
          %input#datepicker2{ :type => "text", :placeholder => "end date", :value => "#{edate}", :disabled => "disabled" }
      %form.form-inline
        %select{ :id => "start" }
          - 12.times do |i|
            - if (i + 7).to_f == s or (s == 0.0 and i == 3) 
              %option{ :value => "#{i+7}", :selected => "selected" }
                = "#{i+7}:00"
            - else
              %option{ :value => "#{i+7}" }
                = "#{i+7}:00"
            - if (i + 7).to_f + 0.5 == s
              %option{ :value => "#{i+7}.5", :selected => "selected" }
                = "#{i+7}:30"
            - else
              %option{ :value => "#{i+7}.5" }
                = "#{i+7}:30"
        %select{ :id => "duration", :value => "" }
          %option{ :id => "d0", :selected => "selected" } select duration
          %option{ :id => "d1", :value => ".5" } 30 minutes
          %option{ :id => "d2", :value => "1" } 1 hour
          %option{ :id => "d3", :value => "1.5" } 1.5 hours
          %option{ :id => "d4", :value => "2" } 2 hours
          %option{ :id => "d5", :value => "3" } 3 hours
          %option{ :id => "d6", :value => "4" } 4 hours
          %option{ :id => "d7", :value => "12" } all day
        %span.error.hidden{ :id => "duration-error" } required
      %form.form-inline
        %label.radio
          %input#recur0{ :type => "radio", :onclick => "single_day();", :name => "recurring", :value => "0", :checked => "checked" }
            non-recurring
        %label.radio                                                            
          %input#recur1{ :type => "radio", :onclick => "single_day();", :name => "recurring", :value => "1" }
            weekly
        %label.radio                                                            
          %input#recur2{ :type => "radio", :onclick => "single_day();", :name => "recurring", :value => "2" }
            bi-weekly
        %label.radio
          %input#recur3{ :type => "radio", :onclick => "single_day();", :name => "recurring", :value => "3" }
            monthly
        %label.radio
          %input#recur4{ :type => "radio", :onclick => "multi_day();", :name => "recurring", :value => "4" }
            multi-day
      - if !update
        %textarea.field.span8{ :rows => 10, :id => "details", :placeholder => "meeting details" }
      - else
        %textarea.field.span8{ :rows => 10, :id => "details", :placeholder => "meeting details" }
          = details
      %span.error.hidden{ :id => "details-error" } required 
      %br
      - if !update
        %button.btn.btn-primary.btn-large{ :onclick => "reserve( null, false); return false;" } reserve
      - else
        %button.btn.btn-primary.btn-large{ :onclick => "reserve( #{reserveid}, true); return false;" } update meeting
      %hr

